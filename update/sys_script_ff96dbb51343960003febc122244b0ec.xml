<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_inhe_reim_ap_approvals</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_inhe_reim_ap_approvals">stateVALCHANGES^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Approval Process</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	if (current.state == '2') {
		//gs.info('Starting to check the approver out');
		var lastApproval = false;
		var totalCost = '0';
		var userRole = current.approver.x_inhe_reim_u_job_role;
		gs.info('The user is a ' + userRole);
		if(userRole == 'Manager') {
			var appLimit = gs.getProperty('x_inhe_reim.manager_approval_amount');
			appLimit = parseFloat(appLimit).toFixed(2);
			//gs.info('The ammount you can approve is ' + appLimit);
			if (current.approval_type == 1){
				totalCost = current.rei_number.total_estimated_cost;
			} else {
				totalCost = current.rei_number.total_expense_cost;
			}
			totalCost = parseFloat(totalCost).toFixed(2);
			//gs.info('The total cost is ' + totalCost);
			if(parseFloat(totalCost) <= parseFloat(appLimit)) {
				lastApproval = true;
			}
		}
		if(userRole == 'Director') {
			var appLimit = gs.getProperty('x_inhe_reim.director_approval_amount');
			appLimit = parseFloat(appLimit).toFixed(2);
			//gs.info('The ammount you can approve is ' + appLimit);
			if (current.approval_type == 1){
				totalCost = current.rei_number.total_estimated_cost;
			} else {
				totalCost = current.rei_number.total_expense_cost;
			}
			totalCost = parseFloat(totalCost).toFixed(2);
			//gs.info('The total cost is ' + totalCost);
			if(parseFloat(totalCost) <= parseFloat(appLimit)) {
				lastApproval = true;
			}
		}
		
		if(userRole == 'Vice President') {
			lastApproval = true;
		}
		
		//gs.info('Is this the last approval ' + lastApproval);
		if (lastApproval == true) {
			var apr = new GlideRecord("x_inhe_reim_table");
			apr.addQuery("sys_id", current.rei_number);
			apr.query();
			if (apr.next()) {
				var yay = GlideDateTime().getDisplayValue();
				apr.approval_state = '3';
				if(apr.state == '9') {
					apr.approvals_completed = yay;}
					else {
						apr.r_approvals_completed = yay;
					}
					apr.current_approver = '';
					apr.update();
				}
			} else if(lastApproval == false) {
				var aOrder = (parseFloat(current.order) + parseFloat('1')).toFixed(0);
				var app = new GlideRecord("x_inhe_reim_ap_approvals");
				app.rei_number = current.rei_number;
				app.approver = current.approver.manager;
				app.state = '1';
				app.order = aOrder;
				app.approval_type = current.approval_type;
				app.approval_for = current.approval_for;
				app.insert();
				
				var aprUp = new GlideRecord("x_inhe_reim_table");
				aprUp.addQuery("sys_id", current.rei_number);
				aprUp.query();
				if (aprUp.next()) {
					aprUp.current_approver = current.approver.manager;
					aprUp.update();
				}
			}
		} else if (current.state == '3') {
			var rjt = new GlideRecord("x_inhe_reim_table");
			rjt.addQuery("sys_id", current.rei_number);
			rjt.query();
			if (rjt.next()) {
				rjt.approval_state = '4';
				rjt.update();
			}
		}
		
		
	})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>PeteBL</sys_created_by>
        <sys_created_on>2016-04-28 18:56:15</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ff96dbb51343960003febc122244b0ec</sys_id>
        <sys_mod_count>27</sys_mod_count>
        <sys_name>Approval Process</sys_name>
        <sys_overrides/>
        <sys_package display_value="Reimbursement Center" source="x_inhe_reim">bd7e76d72b945a002ba4c71317da155b</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Reimbursement Center">bd7e76d72b945a002ba4c71317da155b</sys_scope>
        <sys_update_name>sys_script_ff96dbb51343960003febc122244b0ec</sys_update_name>
        <sys_updated_by>PeteBL</sys_updated_by>
        <sys_updated_on>2017-02-14 20:38:29</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=ff96dbb51343960003febc122244b0ec"/>
</record_update>
