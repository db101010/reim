<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_inhe_reim_table</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Reimbursement Events</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	if (current.operation() == 'insert') {
		gs.eventQueue("x_inhe_reim.rei.inserted", current, gs.getUserID(), gs.getUserName());
	}
	
	if (current.operation() != 'insert' && current.comments.changes()) {
		gs.eventQueue("x_inhe_reim.rei.comments", current, gs.getUserID(), gs.getUserName());
	}
		
	if (current.operation() == 'update') {
		gs.eventQueue("x_inhe_reim.rei.updated", current, gs.getUserID(), gs.getUserName());
	}

// 	if (current.state == '2') {
// 		gs.eventQueue("x_inhe_reim.approved.travel", current, gs.getUserID(), gs.getUserName());
// 	}
	if (current.state == '6') {
		gs.eventQueue("x_inhe_reim.create", current, gs.getUserID(), gs.getUserName());
	}
	
	if (current.state == '3') {
		gs.eventQueue("x_inhe_reim.approved.reim", current, gs.getUserID(), gs.getUserName());
	}
	if (current.state == '7') {
		gs.eventQueue("x_inhe_reim.closed.complete", current, gs.getUserID(), gs.getUserName());
	}
	if (current.state == '5') {
		gs.eventQueue("x_inhe_reim.closed.rejected", current, gs.getUserID(), gs.getUserName());
	}
	if (current.state == '3'&& current.r_payment_status=='1') {
		gs.eventQueue("x_inhe_reim.payment", current, gs.getUserID(), gs.getUserName());
	}
// 	if (current.current_approver.changes() && !current.current_approver.nil()){
// 		gs.eventQueue("x_inhe_reim.approval_needed", current, gs.getUserID(), gs.getUserName());
// 	}

		
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>GibsJT</sys_created_by>
        <sys_created_on>2016-05-05 18:20:00</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>07492ac8139f5240a2723e7f3244b04a</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Reimbursement Events</sys_name>
        <sys_overrides/>
        <sys_package display_value="Reimbursement Center" source="x_inhe_reim">bd7e76d72b945a002ba4c71317da155b</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Reimbursement Center">bd7e76d72b945a002ba4c71317da155b</sys_scope>
        <sys_update_name>sys_script_07492ac8139f5240a2723e7f3244b04a</sys_update_name>
        <sys_updated_by>PeteBL</sys_updated_by>
        <sys_updated_on>2016-05-23 21:31:02</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=07492ac8139f5240a2723e7f3244b04a"/>
</record_update>
