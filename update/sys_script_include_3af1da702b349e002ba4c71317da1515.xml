<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_inhe_reim.QueryData2</api_name>
        <client_callable>true</client_callable>
        <description/>
        <name>QueryData2</name>
        <script><![CDATA[var QueryData2 = Class.create();
QueryData2.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	getUserData: function(){
		var results = this.newItem("results");
		
		var v_value = this.getParameter('sysparm_v_value');
		var usr = new GlideRecord('sys_user');
		usr.addQuery('sys_id', v_value);
		usr.query();
		while (usr.next()) {
			this._addResults(usr.email);
			this._addResults(usr.title);
			this._addResults(usr.phone);
			this._addResults(usr.department);
			this._addResults(usr.employee_number);
			this._addResults(usr.manager);
		}
	},
	_addResults : function(value) {
		var res = this.newItem("results");
		res.setAttribute("value", value);
	},
	
	getDeptName: function() {
		var v_dept = this.getParameter('sysparm_v_dept');
		var deptName = new GlideRecord('cmn_department');
		deptName.addQuery('sys_id' , v_dept);
		deptName.query();
		while (deptName.next()) {
			var v_name = deptName.name;
		}
		return v_name;
	},
	
	getAirportData: function(){
		var results = this.newItem("results");
		var v_value = this.getParameter('sysparm_v_value');
		var usr = new GlideRecord('x_inhe_reim_airport');
		usr.addQuery('sys_id', v_value);
		usr.query();
		while (usr.next()) {
			this._addResults(usr.airport_code);
			this._addResults(usr.state);
			this._addResults(usr.city);
		}
	},
	getlocationoptions: function(){
		var results = this.newItem("results");
		
		var v_value = this.getParameter('sysparm_v_value');
		var gp = new GlideRecord('cmn_location');
		gp.addQuery('active', true);
		gp.query();
		while(gp.next()){
			g_form.addOption('from_1', gp.name, gp.name);
			g_form.addOption('to_1', gp.name, gp.name);
			
		}
	},
	getauthinfo: function(){
		
		var results = this.newItem("results");
		var v_value = this.getParameter('sysparm_v_value');
		var gri = new GlideRecord('x_inhe_reim_table');
		gri.addQuery('sys_id', v_value);
		gri.addQuery('active', true);
		gri.query();
		while (gri.next()) {
			this._addResults(gri.estimated_airfare_cost);
			this._addResults(gri.estimated_hotel_cost);
			this._addResults(gri.advance_check_amount);
			
		}
	},
	
	calcMileage: function(){
		var v_num = this.getParameter('sysparm_v_num');
		var tMiles = 0;
		var grill = new GlideRecord("x_inhe_reim_mileage_table");
		grill.addQuery("rei_number", v_num);
		grill.query();
		while (grill.next()) {
			tMiles = parseFloat(tMiles) + parseFloat(grill.miles_driven);
		}
		return tMiles;
		
	},
	calcExpense: function(){
		var g_num = this.getParameter('sysparm_v_num');
		var gexp = 0;
		var exp = new GlideRecord("x_inhe_reim_expences");
		exp.addQuery("rei_number", g_num);
		exp.query();
		while (exp.next()) {
			gexp = parseFloat(gexp) + parseFloat(exp.g_cost) + parseFloat(exp.alcohol_cost);
		}
		return gexp;
		
	},
	
	calcMeals: function(){
		var v_num = this.getParameter('sysparm_v_num');
		var tMeals = 0;
		var meal = new GlideRecord("x_inhe_reim_reimeals");
		meal.addQuery("rei_number", v_num);
		meal.query();
		while (meal.next()) {
			tMeals = parseFloat(tMeals) + parseFloat(meal.d_total);
		}
		return tMeals;
	},
	
	calcRmeals: function(){
		var v_num = this.getParameter('sysparm_v_num');
		var rMeals = 0;
		var meal = new GlideRecord("x_inhe_reim_reimeals");
		meal.addQuery("rei_number", v_num);
		meal.query();
		while (meal.next()) {
			
			if(parseFloat(meal.d_total) >= '55.00') {
				var day = '55.00';
				rMeals = parseFloat(rMeals) + parseFloat(day);
			} else {
				var day = meal.d_total;
				rMeals = parseFloat(rMeals) + parseFloat(day);
			}
			
		}
		return rMeals;
	},
	
		getAccount: function(){
		var v_anum = this.getParameter('sysparm_v_anum');
		var acct = new GlideRecord("x_inhe_reim_expense_account");
		acct.addQuery("number", v_anum);
		acct.query();
		if (acct.next()) {
			var acctNum = acct.sys_id;
		}
		return acctNum;
	},
	
	
	type: 'QueryData2'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>GibsJT</sys_created_by>
        <sys_created_on>2016-01-04 15:06:54</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3af1da702b349e002ba4c71317da1515</sys_id>
        <sys_mod_count>36</sys_mod_count>
        <sys_name>QueryData2</sys_name>
        <sys_package display_value="Reimbursement Center" source="x_inhe_reim">bd7e76d72b945a002ba4c71317da155b</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Reimbursement Center">bd7e76d72b945a002ba4c71317da155b</sys_scope>
        <sys_update_name>sys_script_include_3af1da702b349e002ba4c71317da1515</sys_update_name>
        <sys_updated_by>PeteBL</sys_updated_by>
        <sys_updated_on>2016-06-16 15:48:08</sys_updated_on>
    </sys_script_include>
</record_update>
